pages:
  stage: pages
  image: ${CUSTOM_NODE_IMAGE_PREFIX:-docker.io/library}/node:20.12.0
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - node_modules/
  script:
    - sed -i "s#base:\\ '/',#base:\\ '/k8s.sh',#g" .vitepress/config.mjs
    - npm run pre:npm
    - if [ $CI_SERVER_HOST == 'framagit.org' ]; then
      cat .vitepress/config.mts;
      sed -i 's#在 Gitee 上编辑此页面#在 FramaGit 上编辑#g' .vitepress/config.mts;
      sed -i 's#https://gitee.com/xuxiaowei-com-cn/k8s.sh/edit/SNAPSHOT/2.0.0/#https://framagit.org/xuxiaowei-com-cn/k8s.sh/-/edit/SNAPSHOT/2.0.0/#g' .vitepress/config.mts;
      cat .vitepress/config.mts;
      fi
    - npm run docs:build
    # https://docs.gitlab.com/ee/user/project/pages/introduction.html#serving-compressed-assets
    - find .vitepress/dist -type f -regex '.*\.\(htm\|html\|txt\|text\|js\|css\)$' -exec gzip -f -k {} \;
    #- find .vitepress/dist -type f -regex '.*\.\(htm\|html\|txt\|text\|js\|css\)$' -exec brotli -f -k {} \;
    - cp -r .vitepress/dist/* public/
    - sed -i "s#base:\\ '/k8s.sh',#base:\\ '/',#g" .vitepress/config.mjs
    - npm run docs:build
  artifacts:
    expire_in: 1 week
    paths:
      - public/
      - .vitepress/dist
  rules:
    - if: $ENABLE_DOCS == "true"
      changes:
        paths:
          - .gitlab/ci/pages.yml
          - .vitepress/**/*
          - "**.md"
          - public
          - static
          - .npmrc
          - docker-compose.yml
          - Dockerfile
          - package.json

docker:build:
  stage: docker:build
  image:
    name: registry.cn-qingdao.aliyuncs.com/xuxiaoweicomcn/kaniko-project-executor:v1.23.1-debug
    entrypoint: [ "" ]
  needs:
    - job: pages
      artifacts: true
  before_script:
    - echo "{\"auths\":{\"registry.cn-qingdao.aliyuncs.com\":{\"auth\":\"$(printf "%s:%s" "${ACR_REGISTRY_USER}" "${ACR_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"},\"https://index.docker.io/v1/\":{\"auth\":\"$(printf "%s:%s" ${DOCKER_USERNAME} "${DOCKER_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
  script:
    - echo $DOCKER_TAG
    - /kaniko/executor version
    - /kaniko/executor --help
    - if [ "$PUSH_DOCKER_HUB" = "true" ]; then
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --build-arg "CI_PIPELINE_URL=${CI_PIPELINE_URL}"
      --destination "registry.cn-qingdao.aliyuncs.com/xuxiaoweicomcn/k8s-sh-docs:${DOCKER_TAG}"
      --destination "registry.cn-qingdao.aliyuncs.com/xuxiaoweicomcn/k8s-sh-docs:${DOCKER_TAG}-${CI_PIPELINE_ID}"
      --destination "xuxiaoweicomcn/docs:${DOCKER_TAG}"
      --destination "xuxiaoweicomcn/docs:${DOCKER_TAG}-${CI_PIPELINE_ID}";
      else
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --build-arg "CI_PIPELINE_URL=${CI_PIPELINE_URL}"
      --destination "registry.cn-qingdao.aliyuncs.com/xuxiaoweicomcn/k8s-sh-docs:${DOCKER_TAG}"
      --destination "registry.cn-qingdao.aliyuncs.com/xuxiaoweicomcn/k8s-sh-docs:${DOCKER_TAG}-${CI_PIPELINE_ID}";
      fi
  rules:
    - if: $ENABLE_DOCS == "true" && $ENABLE_DOCS_DOCKER == "true"
      changes:
        paths:
          - .gitlab/ci/pages.yml
          - .vitepress/**/*
          - "**.md"
          - public
          - static
          - .npmrc
          - docker-compose.yml
          - Dockerfile
          - package.json
  tags:
    - 911k-docker

docker:deploy:
  stage: docker:deploy
  needs:
    - job: docker:build
  image: registry.cn-qingdao.aliyuncs.com/xuxiaoweicomcn/docker:26.1.3-cli
  variables:
    DOCKER_HOST: $DEPLOY_DOCKER_HOST
  script:
    - docker info
    - docker compose up -d
    - docker images | grep k8s-sh-docs || echo
    - docker images | grep k8s-sh-docs | awk '{print $3}' | xargs docker rmi || echo
    - docker images | grep k8s-sh-docs || echo
  environment: production/docs
  rules:
    - if: $ENABLE_DOCS == "true" && $ENABLE_DOCS_DOCKER_DEPLOY == "true"
      changes:
        paths:
          - .gitlab/ci/pages.yml
          - .vitepress/**/*
          - "**.md"
          - public
          - static
          - .npmrc
          - docker-compose.yml
          - Dockerfile
          - package.json
  tags:
    - lighthouse-docker
