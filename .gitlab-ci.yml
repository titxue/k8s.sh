stages:
  - env
  - install
  # 代码同步
  - sync

centos-7.5:env:
  stage: env
  image: xuxiaoweicomcn/debian:curl-jq
  script:
    # 获取凭证
    - response=$(curl -k --request POST --url "$PVE_ADDRESS/api2/json/access/ticket?username=$PVE_USERNAME&password=$PVE_PASSWORD")
    # 解析凭证
    - token=$(echo $response | jq -r '.data.CSRFPreventionToken')
    - ticket=$(echo $response | jq -r '.data.ticket')
    # 还原服务器快照
    - curl -k --request POST --url "$PVE_ADDRESS/api2/extjs/nodes/pve/qemu/$CENTOS_7_5_QEMU_ID/snapshot/$CENTOS_7_5_SNAPSHOT/rollback" --header "Cookie:PVEAuthCookie=$ticket" --header "CSRFPreventionToken:$token"
    # 休眠一段时间，等待服务器还原快照
    - sleep 30
    # 开机
    - curl -k --request POST --url "$PVE_ADDRESS/api2/extjs/nodes/pve/qemu/$CENTOS_7_5_QEMU_ID/status/start" --header "Cookie:PVEAuthCookie=$ticket" --header "CSRFPreventionToken:$token"
    - |
      while true; do
        # 查看状态
        response=$(curl -k --request GET --url "$PVE_ADDRESS/api2/json/nodes/pve/qemu/$CENTOS_7_5_QEMU_ID/status/current" --header "Cookie:PVEAuthCookie=$ticket" --header "CSRFPreventionToken:$token")
        status=$(echo "$response" | jq -r '.data.status')
        if [ "$status" = "running" ]; then
          echo "服务器已运行";
          break
        else
          echo '等待服务器运行';
          sleep 1;
        fi
      done
    - echo '等待一段时间，待服务器完全启动'
    - sleep 30
  tags:
    - plugin-kubernetes
  only:
    - test/machine/centos-7.5/latest

centos-7.5:
  stage: install
  needs:
    - centos-7.5:env
  variables:
    KUBECONFIG: /etc/kubernetes/admin.conf
  script:
    - set -e
    - cat /etc/redhat-release
    - cat /etc/os-release
    - uname -a
    - cat /etc/hosts
    - echo "$CENTOS_7_5_IP" $(hostname) >> /etc/hosts
    - cat /etc/hosts
    - chmod +x k8s.sh
    - chmod +x check.sh
    - echo "$CENTOS_7_5_PASSWORD" | script -qec "sudo -S ./k8s.sh kubernetes-taint calico-manifests-mirror=https://jihulab.com/xuxiaowei-com-cn/k8s.sh/-/raw/SNAPSHOT/0.2.0/mirrors/projectcalico/calico/v3.25/manifests/calico.yaml calico-mirrors=registry.jihulab.com/xuxiaowei-cloud/xuxiaowei-cloud && ./check.sh"
  tags:
    - ssh-centos-7.5
  only:
    - test/machine/centos-7.5/latest

centos-7.6:env:
  stage: env
  image: xuxiaoweicomcn/debian:curl-jq
  script:
    # 获取凭证
    - response=$(curl -k --request POST --url "$PVE_ADDRESS/api2/json/access/ticket?username=$PVE_USERNAME&password=$PVE_PASSWORD")
    # 解析凭证
    - token=$(echo $response | jq -r '.data.CSRFPreventionToken')
    - ticket=$(echo $response | jq -r '.data.ticket')
    # 还原服务器快照
    - curl -k --request POST --url "$PVE_ADDRESS/api2/extjs/nodes/pve/qemu/$CENTOS_7_6_QEMU_ID/snapshot/$CENTOS_7_6_SNAPSHOT/rollback" --header "Cookie:PVEAuthCookie=$ticket" --header "CSRFPreventionToken:$token"
    # 休眠一段时间，等待服务器还原快照
    - sleep 30
    # 开机
    - curl -k --request POST --url "$PVE_ADDRESS/api2/extjs/nodes/pve/qemu/$CENTOS_7_6_QEMU_ID/status/start" --header "Cookie:PVEAuthCookie=$ticket" --header "CSRFPreventionToken:$token"
    - |
      while true; do
        # 查看状态
        response=$(curl -k --request GET --url "$PVE_ADDRESS/api2/json/nodes/pve/qemu/$CENTOS_7_6_QEMU_ID/status/current" --header "Cookie:PVEAuthCookie=$ticket" --header "CSRFPreventionToken:$token")
        status=$(echo "$response" | jq -r '.data.status')
        if [ "$status" = "running" ]; then
          echo "服务器已运行";
          break
        else
          echo '等待服务器运行';
          sleep 1;
        fi
      done
    - echo '等待一段时间，待服务器完全启动'
    - sleep 30
  tags:
    - plugin-kubernetes
  only:
    - test/machine/centos-7.6/latest

centos-7.6:
  stage: install
  needs:
    - centos-7.6:env
  variables:
    KUBECONFIG: /etc/kubernetes/admin.conf
  script:
    - set -e
    - cat /etc/redhat-release
    - cat /etc/os-release
    - uname -a
    - cat /etc/hosts
    - echo "$CENTOS_7_6_IP" $(hostname) >> /etc/hosts
    - cat /etc/hosts
    - chmod +x k8s.sh
    - chmod +x check.sh
    - echo "$CENTOS_7_6_PASSWORD" | script -qec "sudo -S ./k8s.sh kubernetes-taint calico-manifests-mirror=https://jihulab.com/xuxiaowei-com-cn/k8s.sh/-/raw/SNAPSHOT/0.2.0/mirrors/projectcalico/calico/v3.25/manifests/calico.yaml calico-mirrors=registry.jihulab.com/xuxiaowei-cloud/xuxiaowei-cloud && ./check.sh"
  tags:
    - ssh-centos-7.6
  only:
    - test/machine/centos-7.6/latest

centos-7.7:env:
  stage: env
  image: xuxiaoweicomcn/debian:curl-jq
  script:
    # 获取凭证
    - response=$(curl -k --request POST --url "$PVE_ADDRESS/api2/json/access/ticket?username=$PVE_USERNAME&password=$PVE_PASSWORD")
    # 解析凭证
    - token=$(echo $response | jq -r '.data.CSRFPreventionToken')
    - ticket=$(echo $response | jq -r '.data.ticket')
    # 还原服务器快照
    - curl -k --request POST --url "$PVE_ADDRESS/api2/extjs/nodes/pve/qemu/$CENTOS_7_7_QEMU_ID/snapshot/$CENTOS_7_7_SNAPSHOT/rollback" --header "Cookie:PVEAuthCookie=$ticket" --header "CSRFPreventionToken:$token"
    # 休眠一段时间，等待服务器还原快照
    - sleep 30
    # 开机
    - curl -k --request POST --url "$PVE_ADDRESS/api2/extjs/nodes/pve/qemu/$CENTOS_7_7_QEMU_ID/status/start" --header "Cookie:PVEAuthCookie=$ticket" --header "CSRFPreventionToken:$token"
    - |
      while true; do
        # 查看状态
        response=$(curl -k --request GET --url "$PVE_ADDRESS/api2/json/nodes/pve/qemu/$CENTOS_7_7_QEMU_ID/status/current" --header "Cookie:PVEAuthCookie=$ticket" --header "CSRFPreventionToken:$token")
        status=$(echo "$response" | jq -r '.data.status')
        if [ "$status" = "running" ]; then
          echo "服务器已运行";
          break
        else
          echo '等待服务器运行';
          sleep 1;
        fi
      done
    - echo '等待一段时间，待服务器完全启动'
    - sleep 30
  tags:
    - plugin-kubernetes
  only:
    - test/machine/centos-7.7/latest

centos-7.7:
  stage: install
  needs:
    - centos-7.7:env
  variables:
    KUBECONFIG: /etc/kubernetes/admin.conf
  script:
    - set -e
    - cat /etc/redhat-release
    - cat /etc/os-release
    - uname -a
    - cat /etc/hosts
    - echo "$CENTOS_7_7_IP" $(hostname) >> /etc/hosts
    - cat /etc/hosts
    - chmod +x k8s.sh
    - chmod +x check.sh
    - echo "$CENTOS_7_7_PASSWORD" | script -qec "sudo -S ./k8s.sh kubernetes-taint calico-manifests-mirror=https://jihulab.com/xuxiaowei-com-cn/k8s.sh/-/raw/SNAPSHOT/0.2.0/mirrors/projectcalico/calico/v3.25/manifests/calico.yaml calico-mirrors=registry.jihulab.com/xuxiaowei-cloud/xuxiaowei-cloud && ./check.sh"
  tags:
    - ssh-centos-7.7
  only:
    - test/machine/centos-7.7/latest

centos-7.8:env:
  stage: env
  image: xuxiaoweicomcn/debian:curl-jq
  script:
    # 获取凭证
    - response=$(curl -k --request POST --url "$PVE_ADDRESS/api2/json/access/ticket?username=$PVE_USERNAME&password=$PVE_PASSWORD")
    # 解析凭证
    - token=$(echo $response | jq -r '.data.CSRFPreventionToken')
    - ticket=$(echo $response | jq -r '.data.ticket')
    # 还原服务器快照
    - curl -k --request POST --url "$PVE_ADDRESS/api2/extjs/nodes/pve/qemu/$CENTOS_7_8_QEMU_ID/snapshot/$CENTOS_7_8_SNAPSHOT/rollback" --header "Cookie:PVEAuthCookie=$ticket" --header "CSRFPreventionToken:$token"
    # 休眠一段时间，等待服务器还原快照
    - sleep 30
    # 开机
    - curl -k --request POST --url "$PVE_ADDRESS/api2/extjs/nodes/pve/qemu/$CENTOS_7_8_QEMU_ID/status/start" --header "Cookie:PVEAuthCookie=$ticket" --header "CSRFPreventionToken:$token"
    - |
      while true; do
        # 查看状态
        response=$(curl -k --request GET --url "$PVE_ADDRESS/api2/json/nodes/pve/qemu/$CENTOS_7_8_QEMU_ID/status/current" --header "Cookie:PVEAuthCookie=$ticket" --header "CSRFPreventionToken:$token")
        status=$(echo "$response" | jq -r '.data.status')
        if [ "$status" = "running" ]; then
          echo "服务器已运行";
          break
        else
          echo '等待服务器运行';
          sleep 1;
        fi
      done
    - echo '等待一段时间，待服务器完全启动'
    - sleep 30
  tags:
    - plugin-kubernetes
  only:
    - test/machine/centos-7.8/latest

centos-7.8:
  stage: install
  needs:
    - centos-7.8:env
  variables:
    KUBECONFIG: /etc/kubernetes/admin.conf
  script:
    - set -e
    - cat /etc/redhat-release
    - cat /etc/os-release
    - uname -a
    - cat /etc/hosts
    - echo "$CENTOS_7_8_IP" $(hostname) >> /etc/hosts
    - cat /etc/hosts
    - chmod +x k8s.sh
    - chmod +x check.sh
    - echo "$CENTOS_7_8_PASSWORD" | script -qec "sudo -S ./k8s.sh kubernetes-taint calico-manifests-mirror=https://jihulab.com/xuxiaowei-com-cn/k8s.sh/-/raw/SNAPSHOT/0.2.0/mirrors/projectcalico/calico/v3.25/manifests/calico.yaml calico-mirrors=registry.jihulab.com/xuxiaowei-cloud/xuxiaowei-cloud && ./check.sh"
  tags:
    - ssh-centos-7.8
  only:
    - test/machine/centos-7.8/latest

centos-7.9:env:
  stage: env
  image: xuxiaoweicomcn/debian:curl-jq
  script:
    # 获取凭证
    - response=$(curl -k --request POST --url "$PVE_ADDRESS/api2/json/access/ticket?username=$PVE_USERNAME&password=$PVE_PASSWORD")
    # 解析凭证
    - token=$(echo $response | jq -r '.data.CSRFPreventionToken')
    - ticket=$(echo $response | jq -r '.data.ticket')
    # 还原服务器快照
    - curl -k --request POST --url "$PVE_ADDRESS/api2/extjs/nodes/pve/qemu/$CENTOS_7_9_QEMU_ID/snapshot/$CENTOS_7_9_SNAPSHOT/rollback" --header "Cookie:PVEAuthCookie=$ticket" --header "CSRFPreventionToken:$token"
    # 休眠一段时间，等待服务器还原快照
    - sleep 30
    # 开机
    - curl -k --request POST --url "$PVE_ADDRESS/api2/extjs/nodes/pve/qemu/$CENTOS_7_9_QEMU_ID/status/start" --header "Cookie:PVEAuthCookie=$ticket" --header "CSRFPreventionToken:$token"
    - |
      while true; do
        # 查看状态
        response=$(curl -k --request GET --url "$PVE_ADDRESS/api2/json/nodes/pve/qemu/$CENTOS_7_9_QEMU_ID/status/current" --header "Cookie:PVEAuthCookie=$ticket" --header "CSRFPreventionToken:$token")
        status=$(echo "$response" | jq -r '.data.status')
        if [ "$status" = "running" ]; then
          echo "服务器已运行";
          break
        else
          echo '等待服务器运行';
          sleep 1;
        fi
      done
    - echo '等待一段时间，待服务器完全启动'
    - sleep 30
  tags:
    - plugin-kubernetes
  only:
    - test/machine/centos-7.9/latest

centos-7.9:
  stage: install
  needs:
    - centos-7.9:env
  variables:
    KUBECONFIG: /etc/kubernetes/admin.conf
  script:
    - set -e
    - cat /etc/redhat-release
    - cat /etc/os-release
    - uname -a
    - cat /etc/hosts
    - echo "$CENTOS_7_9_IP" $(hostname) >> /etc/hosts
    - cat /etc/hosts
    - chmod +x k8s.sh
    - chmod +x check.sh
    - echo "$CENTOS_7_9_PASSWORD" | script -qec "sudo -S ./k8s.sh kubernetes-taint calico-manifests-mirror=https://jihulab.com/xuxiaowei-com-cn/k8s.sh/-/raw/SNAPSHOT/0.2.0/mirrors/projectcalico/calico/v3.25/manifests/calico.yaml calico-mirrors=registry.jihulab.com/xuxiaowei-cloud/xuxiaowei-cloud && ./check.sh"
  tags:
    - ssh-centos-7.9
  only:
    - test/machine/centos-7.9/latest

# 嵌入
include:
  # 同步代码
  - /sync.yml
