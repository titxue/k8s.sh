stages:
  # 准备系统环境
  - env
  # 安装 k8s
  - install
  # 代码同步
  - sync

# 创建环境
.env: &env
  # 获取凭证
  - |
    response=$(curl -k -s --request POST --url "$PVE_ADDRESS/api2/extjs/access/ticket" --header 'Content-Type: application/x-www-form-urlencoded' --data-urlencode "username=$PVE_USERNAME" --data-urlencode "password=$PVE_PASSWORD" --data-urlencode 'realm=pam' --data-urlencode 'new-format=1')
  - echo $response | jq -r '.success'
  # 解析凭证
  - token=$(echo $response | jq -r '.data.CSRFPreventionToken')
  - ticket=$(echo $response | jq -r '.data.ticket')
  # 还原服务器快照
  - response=$(curl -k -s --request POST --url "$PVE_ADDRESS/api2/extjs/nodes/pve/qemu/$QEMU_ID/snapshot/$SNAPSHOT/rollback" --header "Cookie:PVEAuthCookie=$ticket" --header "CSRFPreventionToken:$token")
  - echo $response | jq -r '.success'
  # 休眠一段时间，等待服务器还原快照
  - sleep 30
  # 开机
  - response=$(curl -k -s --request POST --url "$PVE_ADDRESS/api2/extjs/nodes/pve/qemu/$QEMU_ID/status/start" --header "Cookie:PVEAuthCookie=$ticket" --header "CSRFPreventionToken:$token")
  - echo $response | jq -r '.success'
  - |
    while true; do
      # 查看状态
      response=$(curl -k --request GET --url "$PVE_ADDRESS/api2/json/nodes/pve/qemu/$QEMU_ID/status/current" --header "Cookie:PVEAuthCookie=$ticket" --header "CSRFPreventionToken:$token")
      status=$(echo "$response" | jq -r '.data.status')
      if [ "$status" = "running" ]; then
        echo "服务器已运行";
        break
      else
        echo '等待服务器运行';
        sleep 1;
      fi
    done
  - echo '等待一段时间，待服务器完全启动'
  - sleep 30

anolisos-7.9:env:
  stage: env
  image: registry.cn-qingdao.aliyuncs.com/xuxiaoweicomcn/debian:curl-jq
  variables:
    QEMU_ID: $ANOLISOS_7_9_QEMU_ID
    SNAPSHOT: $ANOLISOS_7_9_SNAPSHOT
  before_script:
    - echo $PVE_ADDRESS
    - echo $ANOLISOS_7_9_QEMU_ID
    - echo $QEMU_ID
    - echo $ANOLISOS_7_9_SNAPSHOT
    - echo $SNAPSHOT
  script:
    - *env
  timeout: 120s
  rules:
    - changes:
        paths:
          - .gitlab-ci.yml
          - k8s.sh
          - tmp.sh
  tags:
    - g150s-docker

anolisos-7.9:install:
  stage: install
  needs:
    - anolisos-7.9:env
  hooks:
    pre_get_sources_script:
      - yum install -y git
      - git config --global http.sslVerify false
  before_script:
    - cat /etc/os-release
    - ip addr | grep 'inet '
  script:
    - chmod +x tmp.sh
    - ./tmp.sh docker-repo containerd-install
    - ./tmp.sh docker-repo docker-install
    - ./tmp.sh kubernetes-repo kubernetes-install
  rules:
    - changes:
        paths:
          - .gitlab-ci.yml
          - k8s.sh
          - tmp.sh
  tags:
    - GitLab-CICD-AnolisOS-7.9

anolisos-7.9:env:custom-kubernetes-repo-type:
  stage: env
  image: registry.cn-qingdao.aliyuncs.com/xuxiaoweicomcn/debian:curl-jq
  variables:
    QEMU_ID: $ANOLISOS_7_9_QEMU_ID
    SNAPSHOT: $ANOLISOS_7_9_SNAPSHOT
  before_script:
    - echo $PVE_ADDRESS
    - echo $ANOLISOS_7_9_QEMU_ID
    - echo $QEMU_ID
    - echo $ANOLISOS_7_9_SNAPSHOT
    - echo $SNAPSHOT
  script:
    - *env
  timeout: 120s
  rules:
    - changes:
        paths:
          - .gitlab-ci.yml
          - k8s.sh
          - tmp.sh
  tags:
    - g150s-docker
  when: manual

anolisos-7.9:install:custom-kubernetes-repo-type:
  stage: install
  needs:
    - anolisos-7.9:env:custom-kubernetes-repo-type
  variables:
    KUBERNETES_REPO_TYPE: kubernetes
  hooks:
    pre_get_sources_script:
      - yum install -y git
      - git config --global http.sslVerify false
  before_script:
    - cat /etc/os-release
    - ip addr | grep 'inet '
    - echo $KUBERNETES_REPO_TYPE
  script:
    - chmod +x tmp.sh
    - ./tmp.sh docker-repo containerd-install
    - ./tmp.sh docker-repo docker-install
    - ./tmp.sh kubernetes-repo kubernetes-install kubernetes-repo-type=$KUBERNETES_REPO_TYPE
  rules:
    - changes:
        paths:
          - .gitlab-ci.yml
          - k8s.sh
          - tmp.sh
  tags:
    - GitLab-CICD-AnolisOS-7.9

anolisos-7.9:env:custom-kubernetes-version:
  stage: env
  image: registry.cn-qingdao.aliyuncs.com/xuxiaoweicomcn/debian:curl-jq
  variables:
    QEMU_ID: $ANOLISOS_7_9_QEMU_ID
    SNAPSHOT: $ANOLISOS_7_9_SNAPSHOT
  before_script:
    - echo $PVE_ADDRESS
    - echo $ANOLISOS_7_9_QEMU_ID
    - echo $QEMU_ID
    - echo $ANOLISOS_7_9_SNAPSHOT
    - echo $SNAPSHOT
  script:
    - *env
  timeout: 120s
  rules:
    - changes:
        paths:
          - .gitlab-ci.yml
          - k8s.sh
          - tmp.sh
  tags:
    - g150s-docker
  when: manual

anolisos-7.9:install:custom-kubernetes-version:
  stage: install
  needs:
    - anolisos-7.9:env:custom-kubernetes-version
  variables:
    KUBERNETES_VERSION: v1.30.6
  hooks:
    pre_get_sources_script:
      - yum install -y git
      - git config --global http.sslVerify false
  before_script:
    - cat /etc/os-release
    - ip addr | grep 'inet '
    - echo $KUBERNETES_VERSION
  script:
    - echo $
    - chmod +x tmp.sh
    - ./tmp.sh docker-repo containerd-install
    - ./tmp.sh docker-repo docker-install
    - ./tmp.sh kubernetes-repo kubernetes-install kubernetes-version=$KUBERNETES_VERSION
    - version=$(kubelet --version | awk '{print $2}')
    - echo $version
    - |
      if [ "$version" == "$KUBERNETES_VERSION" ]; then
          echo "版本正确";
      else
          echo "版本不匹配" && exit 1;
      fi
  rules:
    - changes:
        paths:
          - .gitlab-ci.yml
          - k8s.sh
          - tmp.sh
  tags:
    - GitLab-CICD-AnolisOS-7.9

# 嵌入
include:
  # 同步代码
  - /sync.yml
